const express = require("express");
const cors = require("cors");
const multer = require("multer");
const path = require("path");

const app = express();
const port = 5001;

app.use(cors());
app.use(express.json()); // Para interpretar JSON no corpo das requisições

// Configurar upload de imagens
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, path.join(__dirname, "../frontend/public/imagens")); // Salvando imagens no frontend
  },
  filename: (req, file, cb) => {
    cb(null, Date.now() + path.extname(file.originalname)); // Nome único para cada imagem
  },
});

const upload = multer({ storage });

// Simulação de banco de dados (em memória)
const jogadores = { masculino: [], feminino: [] };

// Rota para receber jogadores
app.post("/jogadores", upload.single("imagem"), (req, res) => {
  const { nome, posicao, genero, ano } = req.body;
  const imagem = req.file ? `/imagens/${req.file.filename}` : null;

  if (!genero || (genero !== "masculino" && genero !== "feminino")) {
    return res.status(400).json({ erro: "Gênero inválido" });
  }

  const novoJogador = { nome, posicao, genero, ano, imagem };
  jogadores[genero].push(novoJogador);

  res.json({ mensagem: "Jogador cadastrado com sucesso", jogador: novoJogador });
});

// Rota para listar jogadores
app.get("/jogadores", (req, res) => {
  res.json(jogadores);
});

// Iniciar servidor
app.listen(port, () => {
  console.log(`Servidor rodando em http://localhost:${port}`);
});
